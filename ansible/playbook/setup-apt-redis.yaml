---
- name: Install redis for Ubuntu
  hosts: "{{ target_host | default('localhost') }}"
  vars:
    nproc: "{{ maxproc | default('64000') }}"
    nofile: "{{ maxfile | default('64000') }}"
  tasks:
    
    - name: Apt for Prerequisites
      ansible.builtin.apt:
        update_cache: yes
        pkg:
        - lsb-release
    - name: Add Repository for Apt
      block:
      - name: Check file
        ansible.builtin.stat:
          path: /usr/share/keyrings/redis-archive-keyring.gpg
        register: redis_gpg
      - name: Delete Old Redis GPG key
        ansible.builtin.file:
          path: /usr/share/keyrings/redis-archive-keyring.gpg
          state: absent
        when: redis_gpg.stat.exists
      - name: Add GPG Keyring
        ansible.builtin.shell: curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
      - name:
        ansible.builtin.shell: echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list

    - name: Apt for Redis
      ansible.builtin.apt:
        update_cache: yes
        pkg:
        - redis
      notify:
        - Restart Redis

    - name: Add or modify memlock, both soft and hard, limit for the user james with a comment
      community.general.pam_limits:
        domain: '*'
        limit_type: '-'
        limit_item: nproc
        value: "{{ nproc }}"
        #use_max: true

    - name: Add or modify memlock, both soft and hard, limit for the user james with a comment
      community.general.pam_limits:
        domain: '*'
        limit_type: '-'
        limit_item: nofile
        value: "{{ nofile }}"
        #use_max: true

    - name: To ensure the Linux kernel feature Transparent Huge Pages does not impact Redis memory usage and latency
      ansible.builtin.shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled
      notify:
        - Restart Redis

    - name: check and create /etc/sysctl.d/redis.conf
      block:
        - name: Check if redis.conf exists
          stat:
            path: /etc/sysctl.d/redis.conf
          register: redis_conf_stat
        - name: Create redis.conf if it doesn't exist
          file:
            path: "/etc/sysctl.d/redis.conf"
            state: touch
            mode: "0644"
          when: not redis_conf_stat.stat.exists

    - name: Set the Linux kernel overcommit memory 
      ansible.posix.sysctl:
        name: vm.overcommit_memory
        value: '1'
        sysctl_set: true
        state: present
        reload: true
        sysctl_file: /etc/sysctl.d/redis.conf
      notify:
        - Restart Redis

  handlers:
    - name: Restart Redis
      systemd:
        name: redis-server
        state: restarted
